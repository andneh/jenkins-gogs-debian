version: '3'
services:
  
  
  
  nginx:
    image: nginx:latest
    ports:
      - "8880:80"
      - "8443:443"
    volumes:
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf/nginx/servers:/etc/nginx/servers:ro
      - ./conf/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - gogs-jenkins-network
    depends_on:
      - gogs
      - jenkins



  jenkins:
    build:
      # context: contextPath
      dockerfile: ./conf/jenkins.dockerfile
    container_name: jenkins
    volumes:
      - ./data/jenkins:/var/jenkins_home
    env_file:
      - ./envs/jenkins.env
    networks:
      - gogs-jenkins-network
    depends_on:
      - gogs




  gogs:
    image: gogs/gogs:latest
    container_name: gogs
    volumes:
      - ./conf/gogs.ini:/data/gogs/conf/app.ini:ro
      - ./data/gogs:/data
    env_file:
      - ./envs/gogs.env
    networks:
      - gogs-jenkins-network
    depends_on:
      - postgres




  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    env_file:
      - ./envs/postgres.env
    networks:
      - gogs-jenkins-network





  ssh-agent:
      image: debian:latest
      container_name: ssh-agent
      working_dir: /app
      volumes:
        - ./data/testing:/app  # Mount a volume for your testing code/scripts
      networks:
        - gogs-jenkins-network
      depends_on:
        - postgres
      command: tail -f /dev/null  # Keeps the container running for testing purposes


# volumes:
  

networks:
  gogs-jenkins-network:
